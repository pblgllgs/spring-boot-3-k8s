apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookmark-backend-service
  labels:
    app: bookmark-service
    version: latest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookmark-service
  template:
    metadata:
      labels:
        app: bookmark-service
    spec:
      initContainers:
        - name: helper
          image: busybox:1.31
          command:
            - "/bin/sh"
            - "-c"
            - |
              until nc -zv postgres 5432
              do
                echo "Esperando a que PostgreSQL est√© disponible..."
                sleep 2
              done
      containers:
      - image: pblgllgs/bookmark-service:latest
        name: bookmark-service
        imagePullPolicy: Always
        env:
          - name: SPRING_PROFILES_ACTIVE
            value: k8s
          - name: DB_HOST
            valueFrom: 
              configMapKeyRef: 
                name: backend-configmap
                key: db-host
          - name: DB_NAME
            valueFrom: 
              configMapKeyRef:
                name: backend-configmap
                key: db-name
          - name: DB_PORT
            valueFrom: 
              configMapKeyRef:
                name: backend-configmap
                key: db-port
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: secrets
                key: db-password
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: secrets
                key: db-username
        ports:
        - containerPort: 8080
        resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: bookmark-backend-service
spec:
  type: NodePort
  selector:
    app: bookmark-service
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
    nodePort: 30090